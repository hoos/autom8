#!/usr/bin/env bash
#!/usr/bin/env bash
#
# Copyright (C) 2016 Xenith Consulting Limited
# Author: Salim Badakhchani <salimb@xenithconsulting.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

# Switch on Debugging
set -x

# Check user privileges
[[ $(id -u) == 0 ]] || echo -e "\n# This script requires root privileges to run"

# Define logfile
LOG="/root/infra.log"

echo -e "########################################################################" > $LOG
echo -e "Installing System..." >> $LOG
echo -e "########################################################################\n" >> $LOG
echo -e $(date) >> $LOG
echo >> $LOG

# Execution statements logicaly grouped into functions.

disable_firewall () {
    echo -e "# Disabling..." >> $LOG
    systemctl stop iptables > /dev/null 2>&1 
    systemctl stop ip6tables > /dev/null 2>&1
    systemctl stop firewalld > /dev/null 2>&1
}

update_system () {
    echo -e "# Updating system..." >> $LOG
    yum -y update > /dev/null 2>&1
}

install_packages () {
    echo -e "# Installing packages..." >> $LOG
    [[ -f "/etc/yum.repos.d/rpmforge.repo" ]] || rpm -Uvh ftp://139.162.181.50/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm
    yum -y install git wget unzip net-tools bind bind-utils patch mlocate htop iftop curl tree
}

setup_env () {
    echo "# Creating profile..." >> $LOG
    cat > /etc/profile.d/custom.sh << 'EOF'
# Prompt colors
if [ `whoami` != "root" ]; then
    PS1='\[\e[32m\][\u@\h \W]\$\[\e[0m\] '
else
    PS1='\[\e[31m\][\u@\h \W]\$\[\e[0m\] '
fi

# Aliases
alias c='clear'
alias h='history'
alias m='less /var/log/messages'
alias l='ll -has '
alias n='netstat -vatulpn | grep'
alias p='ps -A | grep'
alias g='gvim'

# Configure bash history 
HISTSIZE='1000000'
HISTIGNORE=' *:&:?:??'
HISTCONTROL='ignoreboth:erasedups'

export HISTSIZE HISTIGNORE HISTCONTROL

# Turn on bash history options
shopt -s histappend histreedit histverify

# Sync term history
history() {
  history_sync
  builtin history "$@"
}

history_sync() {
  builtin history -a         
  HISTFILESIZE=$HISTSIZE     
  builtin history -c         
  builtin history -r         
}

PROMPT_COMMAND=history_sync
EOF

source /etc/profile.d/custom.sh
}

install_nameserver () {
    echo -e "# Patching bind" >> $LOG
    [[ -f "/etc/named.conf.orig" ]]; mv /etc/named.conf.orig /etc/named.conf
    cp -p /etc/named.conf /etc/named.conf.orig
    cat > /tmp/bind.patch << 'EOF'
--- /etc/named.conf	2015-06-01 06:43:48.000000000 -0400
+++ /etc/named.conf	2016-04-18 10:15:51.743000000 -0400
@@ -8,13 +8,14 @@
 //
 
 options {
-	listen-on port 53 { 127.0.0.1; };
+	listen-on port 53 { 127.0.0.1; 192.168.122.100; };
 	listen-on-v6 port 53 { ::1; };
 	directory 	"/var/named";
 	dump-file 	"/var/named/data/cache_dump.db";
 	statistics-file "/var/named/data/named_stats.txt";
 	memstatistics-file "/var/named/data/named_mem_stats.txt";
-	allow-query     { localhost; };
+	allow-query     { any; };
+	forwarders	{ 8.8.8.8; 8.8.4.4; };
 
 	/* 
 	 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
@@ -30,6 +31,7 @@
 
 	dnssec-enable yes;
 	dnssec-validation yes;
+	dnssec-lookaside auto;
 
 	/* Path to ISC DLV key */
 	bindkeys-file "/etc/named.iscdlv.key";
@@ -52,6 +54,18 @@
 	file "named.ca";
 };
 
+zone "example.com" IN {
+	type master;
+	file "example.com.zone";
+	allow-update { none; };
+};
+        
+zone "122.168.192.in-addr.arpa" IN {
+	type master;
+	file "122.168.192.zone";
+	allow-update { none; };
+};
+
 include "/etc/named.rfc1912.zones";
 include "/etc/named.root.key";
EOF
    (cd / && patch -p0) < /tmp/bind.patch
    rm -f /tmp/bind.patch
  
    echo -e "# Creating reverse zone file" >> $LOG
    cat > /var/named/122.168.192.zone << 'EOF'
$ORIGIN 122.168.192.in-addr.arpa.
$TTL 86400
@       IN      SOA     infra.example.com.      hostmaster.example.com. (
                        2016032801 ; serial
                        21600      ; refresh after 6 hours
                        3600       ; retry after 1 hour
                        604800     ; expire after 1 week
                        86400 )    ; minimum TTL of 1 day
;
@       IN     NS      infra.example.com.
;
100     IN      PTR     infra.example.com.
101     IN      PTR     devops.example.com.
EOF
     
    echo -e "# Creating zone file" >> $LOG
    cat > /var/named/example.com.zone << 'EOF'
$ORIGIN example.com.
$TTL 86400
@               IN      SOA     infra.example.com.      hostmaster.example.com. (
                        2016041801 ; serial
                        21600      ; refresh after 6 hours
                        3600       ; retry after 1 hour
                        604800     ; expire after 1 week
                        86400 )    ; minimum TTL of 1 day
;
;

                IN      NS      infra.example.com.

*.apps.example.com.  300 IN  A       192.168.122.101

infra           IN      A       192.168.122.100
devops		IN  	A  	192.168.122.101
EOF
    chown -R root:named /var/named/*.zone
    systemctl enable named && systemctl start named

    echo -e "# Creating resolve file" >> $LOG
    cat > /etc/resolv.conf << 'EOF'
# Generated by Kojak
domain example.com
search example.com
nameserver 127.0.0.1
EOF
}

disable_firewall
update_system
install_packages
setup_env
install_nameserver
#
# Copyright (C) 2016 Xenith Consulting Limited
# Author: Salim Badakhchani <salimb@xenithconsulting.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

# Switch on Debugging
set -x

# Check user privileges
[[ $(id -u) == 0 ]] || echo -e "\n# This script requires root privileges to run"

# Define logfile
LOG="/root/install.log"

echo -e "########################################################################" > $LOG
echo -e "Installing System..." >> $LOG
echo -e "########################################################################\n" >> $LOG
echo -e $(date) >> $LOG
echo >> $LOG

# Execution statements logicaly grouped into functions.

disable_firewall () {
    echo -e "# Disabling..." >> $LOG
    systemctl stop iptables > /dev/null 2>&1 
    systemctl stop ip6tables > /dev/null 2>&1
    systemctl stop firewalld > /dev/null 2>&1
}

update_system () {
    echo -e "# Updating system..." >> $LOG
    yum -y update > /dev/null 2>&1
}

install_packages () {
    echo -e "# Installing packages..." >> $LOG
    [[ -f "/etc/yum.repos.d/rpmforge.repo" ]] || rpm -Uvh ftp://139.162.181.50/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm
    yum -y install git wget unzip net-tools bind bind-utils patch mlocate htop iftop curl tree
}

setup_env () {
    echo "# Creating profile..." >> $LOG
    cat > /etc/profile.d/custom.sh << 'EOF'
# Prompt colors
if [ `whoami` != "root" ]; then
    PS1='\[\e[32m\][\u@\h \W]\$\[\e[0m\] '
else
    PS1='\[\e[31m\][\u@\h \W]\$\[\e[0m\] '
fi

# Aliases
alias c='clear'
alias h='history'
alias m='less /var/log/messages'
alias l='ll -has '
alias n='netstat -vatulpn | grep'
alias p='ps -A | grep'
alias g='gvim'

# Configure bash history 
HISTSIZE='1000000'
HISTIGNORE=' *:&:?:??'
HISTCONTROL='ignoreboth:erasedups'

export HISTSIZE HISTIGNORE HISTCONTROL

# Turn on bash history options
shopt -s histappend histreedit histverify

# Sync term history
history() {
  history_sync
  builtin history "$@"
}

history_sync() {
  builtin history -a         
  HISTFILESIZE=$HISTSIZE     
  builtin history -c         
  builtin history -r         
}

PROMPT_COMMAND=history_sync
EOF

source /etc/profile.d/custom.sh
}

install_nameserver () {
    echo -e "# Patching bind" >> $LOG
    [[ -f "/etc/named.conf.orig" ]]; mv /etc/named.conf.orig /etc/named.conf
    cp -p /etc/named.conf /etc/named.conf.orig
    cat > /tmp/bind.patch << 'EOF'
--- /etc/named.conf	2015-06-01 06:43:48.000000000 -0400
+++ /etc/named.conf	2016-04-18 10:15:51.743000000 -0400
@@ -8,13 +8,14 @@
 //
 
 options {
-	listen-on port 53 { 127.0.0.1; };
+	listen-on port 53 { 127.0.0.1; 192.168.122.100; };
 	listen-on-v6 port 53 { ::1; };
 	directory 	"/var/named";
 	dump-file 	"/var/named/data/cache_dump.db";
 	statistics-file "/var/named/data/named_stats.txt";
 	memstatistics-file "/var/named/data/named_mem_stats.txt";
-	allow-query     { localhost; };
+	allow-query     { any; };
+	forwarders	{ 8.8.8.8; 8.8.4.4; };
 
 	/* 
 	 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
@@ -30,6 +31,7 @@
 
 	dnssec-enable yes;
 	dnssec-validation yes;
+	dnssec-lookaside auto;
 
 	/* Path to ISC DLV key */
 	bindkeys-file "/etc/named.iscdlv.key";
@@ -52,6 +54,18 @@
 	file "named.ca";
 };
 
+zone "example.com" IN {
+	type master;
+	file "example.com.zone";
+	allow-update { none; };
+};
+        
+zone "122.168.192.in-addr.arpa" IN {
+	type master;
+	file "122.168.192.zone";
+	allow-update { none; };
+};
+
 include "/etc/named.rfc1912.zones";
 include "/etc/named.root.key";
EOF
    (cd / && patch -p0) < /tmp/bind.patch
    rm -f /tmp/bind.patch
  
    echo -e "# Creating reverse zone file" >> $LOG
    cat > /var/named/122.168.192.zone << 'EOF'
$ORIGIN 122.168.192.in-addr.arpa.
$TTL 86400
@       IN      SOA     infra.example.com.      hostmaster.example.com. (
                        2016032801 ; serial
                        21600      ; refresh after 6 hours
                        3600       ; retry after 1 hour
                        604800     ; expire after 1 week
                        86400 )    ; minimum TTL of 1 day
;
@       IN     NS      infra.example.com.
;
100     IN      PTR     infra.example.com.
101     IN      PTR     devops.example.com.
EOF
     
    echo -e "# Creating zone file" >> $LOG
    cat > /var/named/example.com.zone << 'EOF'
$ORIGIN example.com.
$TTL 86400
@               IN      SOA     infra.example.com.      hostmaster.example.com. (
                        2016041801 ; serial
                        21600      ; refresh after 6 hours
                        3600       ; retry after 1 hour
                        604800     ; expire after 1 week
                        86400 )    ; minimum TTL of 1 day
;
;

                IN      NS      infra.example.com.

*.apps.example.com.  300 IN  A       192.168.122.101

infra           IN      A       192.168.122.100
devops		IN  	A  	192.168.122.101
EOF
    chown -R root:named /var/named/*.zone
    systemctl enable named && systemctl start named

    echo -e "# Creating resolve file" >> $LOG
    cat > /etc/resolv.conf << 'EOF'
# Generated by Kojak
domain example.com
search example.com
nameserver 127.0.0.1
EOF
}

disable_firewall
update_system
install_packages
setup_env
install_nameserver
